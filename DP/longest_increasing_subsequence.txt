//memoization
class Solution {
private:
    int f(vector<int> &nums, int cur_ind, int prev_ind, vector<vector<int>> &dp){
        if(cur_ind == nums.size()) return 0;
        if(dp[cur_ind][prev_ind+1] != -1) return dp[cur_ind][prev_ind+1];
        int ans = 0;
        if(prev_ind == -1 || nums[cur_ind] > nums[prev_ind]){
            int take = 1 + f(nums, cur_ind+1, cur_ind, dp);
            int nottake = 0 + f(nums, cur_ind+1, prev_ind, dp);
            ans = max(take, nottake);
        }else{
            ans = 0 + f(nums, cur_ind+1, prev_ind, dp);
        }
        return dp[cur_ind][prev_ind+1] = ans;
    }
public:
    int lengthOfLIS(vector<int>& nums) {
        int n = nums.size();
        vector<vector<int>> dp(n, vector<int>(n+1, -1));
        return f(nums, 0, -1, dp);
    }
};